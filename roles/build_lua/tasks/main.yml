- name: Create temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: lua
  register: build_lua_temp_dir
- name: Transfer tarball to remote
  ansible.posix.synchronize:
    src: "{{ role_path }}/files/lua-5.1.5.tar.gz"
    dest: "{{ build_lua_temp_dir.path }}"
    mode: push
- name: Extract tarball
  ansible.builtin.unarchive:
    src: "{{ build_lua_temp_dir.path }}/lua-5.1.5.tar.gz"
    dest: "{{ build_lua_temp_dir.path }}"
    remote_src: true
- name: Install dependencies
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - readline-devel
    - ncurses-devel
    - make
    - gcc
    - nginx
  when:
    - ansible_os_family == 'RedHat'
- name: Build Lua 5.1.5
  ansible.builtin.shell:
    chdir: "{{ build_lua_temp_dir.path }}/lua-5.1.5"
    creates: "{{ build_lua_install_prefix }}/bin/lua"
    cmd: |
      make linux && \
      make install INSTALL_TOP="{{ build_lua_install_prefix }}"
  changed_when: false
- name: Remove temporary directory
  ansible.builtin.file:
    path: "{{ build_lua_temp_dir.path }}"
    state: absent
- name: Change owner to nginx
  ansible.builtin.file:
    path: "{{ build_lua_install_prefix }}"
    owner: nginx
    group: nginx
- name: Set SELinux context on whole dir recursively so that nginx can execute lua scripts
  ansible.builtin.shell:
    cmd: |
      semanage fcontext -a -t httpd_sys_script_exec_t "{{ build_lua_install_prefix }}(/.*)?";
      semanage fcontext -a -t httpd_sys_script_exec_t "{{ build_lua_install_prefix }}";
      semanager fcontext -a -t httpd_sys_script_exec_t "{{ build_lua_install_prefix }}/bin/lua";
      restorecon -R "{{ build_lua_install_prefix }}"
  changed_when: false
  when: ansible_selinux is defined and ansible_selinux and ansible_selinux.status != 'disabled'
