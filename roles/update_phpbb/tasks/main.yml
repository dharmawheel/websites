- name: Check variables
  ansible.builtin.assert:
    that:
      - update_phpbb_current_version is defined
      - update_phpbb_next_version is defined
      - update_phpbb_site is defined
      - update_phpbb_current_version != update_phpbb_next_version
      - update_phpbb_current_version is ansible.builtin.version(update_phpbb_next_version, '<')
      - update_phpbb_current_version != ""
      - update_phpbb_next_version != ""
      - update_phpbb_site != ""

- name: Create temp directory for phpBB3 patch files
  ansible.builtin.tempfile:
    state: directory
    prefix: phpbb-patch-
  register: update_phpbb_patch_dir

- name: Fetch phpBB3 patch files
  ansible.builtin.get_url:
    url: >-
      https://download.phpbb.com/pub/release/
      {{ update_phpbb_next_version.split('.')[:2] | join('.') }}/
      {{ update_phpbb_next_version }}/
      phpBB-{{ update_phpbb_next_version }}-patch.tar.bz2
    dest: "{{ update_phpbb_patch_dir.path }}/phpbb.tar.bz2"
    mode: "0644"

- name: Extract phpBB3 patch files
  ansible.builtin.unarchive:
    src: "{{ update_phpbb_patch_dir.path }}/phpbb.tar.bz2"
    dest: "{{ update_phpbb_patch_dir.path }}"
    include:
      - "phpBB-{{ update_phpbb_current_version }}_to_{{ update_phpbb_next_version }}.patch"

- name: Fail if patch file does not exist
  ansible.builtin.stat:
    path: "{{ update_phpbb_patch_dir.path }}/phpBB-{{ update_phpbb_current_version }}_to_{{ update_phpbb_next_version }}.patch"
  register: update_phpbb_patch_file
  failed_when:
    - not update_phpbb_patch_file.stat.exists

- name: Extract phpBB3 files
  ansible.builtin.unarchive:
    src: "{{ update_phpbb_patch_dir.path }}/phpbb.tar.bz2"
    dest: "{{ role_path }}/../../{{ update_phpbb_site }}"
    include:
      - vendor/

- name: Apply phpBB3 patch
  ansible.posix.patch:
    basedir: "{{ role_path }}/../../{{ update_phpbb_site }}"
    src: "{{ update_phpbb_patch_dir.path }}/phpBB-{{ update_phpbb_current_version }}_to_{{ update_phpbb_next_version }}.patch"
    state: present
